import streamlit as st
import pandas as pd
import plotly.express as px
from datetime import datetime, timedelta

# 设置页面配置
st.set_page_config(
    page_title="趋势洞察",
    page_icon="🌏",
    layout="wide"
)

# 自定义CSS样式
st.markdown("""
    <style>
    .main {
        background-color: #f5f7f9;
    }
    .title {
        font-size: 32px;
        font-weight: bold;
        color: #1e3d59;
        margin-bottom: 20px;
    }
    .card {
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin-bottom: 20px;
    }
    </style>
    """, unsafe_allow_html=True)

# 页面标题
st.markdown('<p class="title">🌏 跨境趋势分析</p>', unsafe_allow_html=True)

# 搜索趋势分析
# 输入关键词
keywords = st.text_input("输入关键词（多个关键词用逗号分隔）", "跨境电商,亚马逊,速卖通")
keywords_list = [k.strip() for k in keywords.split(",")]

# 选择时间范围
timeframe = st.selectbox(
    "选择时间范围",
    ["过去7天", "过去30天", "过去90天", "过去12个月"]
)

if st.button("分析趋势"):
    # 生成模拟数据
    dates = pd.date_range(
        end=datetime.now(),
        periods={'过去7天': 7, '过去30天': 30, '过去90天': 90, '过去12个月': 365}[timeframe],
        freq='D'
    )
    
    data = {}
    for kw in keywords_list:
        # 生成随机趋势数据
        import numpy as np
        trend = np.random.normal(loc=50, scale=10, size=len(dates))
        trend = np.abs(trend)  # 确保数值为正
        data[kw] = trend
        
    df = pd.DataFrame(data, index=dates)
    
    # 创建两列布局
    col1, col2 = st.columns([2, 1])
    
    with col1:
        # 绘制趋势图
        fig = px.line(df, 
                     title='搜索趋势变化',
                     labels={'value': '搜索热度', 'date': '日期', 'variable': '关键词'})
        st.plotly_chart(fig, use_container_width=True)
    
    with col2:
        st.subheader("热门相关词")
        # 为每个关键词生成模拟的相关词
        for kw in keywords_list:
            st.write(f"与 '{kw}' 相关的热门词：")
            related_words = pd.DataFrame({
                '相关词': [f'{kw}相关词{i}' for i in range(1, 6)],
                '热度': np.random.randint(1000, 10000, 5)
            })
            st.dataframe(related_words, hide_index=True)

# 添加页脚
st.markdown("---")
st.markdown(
    "注：当前展示为模拟数据 | 更新时间: " + 
    datetime.now().strftime("%Y-%m-%d %H:%M:%S")
)
